buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.palantir.gradle.docker:gradle-docker:${palantirVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'com.palantir.docker' version "${palantirVersion}"
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

group 'org.example'
version appVersion

repositories {
    mavenCentral()
    maven {
        url "https://maven.restlet.com"
    }
}

test {
    useJUnitPlatform()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter"
    compile "org.apache.solr:solr-solrj:${solrVersion}"

    compile "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.apache.solr:solr-core:${solrVersion}"
}

bootJar {
    archiveFileName = 'app.jar'
}

docker {
    name = "solr_sync:${appVersion}"
    files tasks.bootJar.outputs
    copySpec.from("build").into("build")
    setDockerfile(file("Dockerfile"))
}

docker.dependsOn jar

clean.doFirst {
    delete(project.file('src/test/resources/dst_solr/filestore'))
    delete(project.file('src/test/resources/dst_solr/userfiles'))
    delete(project.file('src/test/resources/dst_solr/test_core/data'))
    delete(project.file('src/test/resources/src_solr/filestore'))
    delete(project.file('src/test/resources/src_solr/userfiles'))
    delete(project.file('src/test/resources/src_solr/test_core/data'))
}
